# -*- coding: utf-8 -*-
"""Roberta.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1girtP7njM3Hm1oOMZ_PppIe9aZLtoin1
"""

!pip install transformers
!pip install datasets

from transformers import pipeline
import re
from nltk.tokenize import RegexpTokenizer
from nltk.corpus import stopwords
import pandas as pd
import numpy as np
from sklearn.metrics import accuracy_score
from sklearn.neural_network import MLPClassifier
import gensim.downloader as api
import nltk
nltk.download('stopwords')

stop_words = set(stopwords.words('english'))
from datasets import load_dataset, list_datasets

def pre_process(dataset):
    global stop_words
    pattern = RegexpTokenizer(r'\w+')
    pattern2 = re.compile('[0-9]+')

    new_list = []

    for i in range(0,len(dataset)):
        temp = dataset[i]
        if '\n' in temp:  # Any new lines present in the same column remove it
            temp = temp.replace('\n', " ")
        if r'<br />' in temp: # special character removal
            temp = temp.replace(r'<br />', " ")
        temp_word_list =  pattern.tokenize(temp)
        s = ""
        temp_set = set() #set to remove duplicates in each comment.
        result = []
        for j in temp_word_list:
            j = j.lower()
            if re.search(pattern2, j): #numbers are removed
                pass
            else:
                if j not in stop_words: #removal of stop words
                    if j not in temp_set:
                        temp_set.add(j)
                        result.append((j))

        # print(result)
        for k in result:
            s = s + " " + k
        new_list.append(s[0:512])
    #print(new_list)
    return new_list

data = pd.read_csv("/content/Test.csv")
text = pre_process(data['text'])

model_name = "aychang/roberta-base-imdb"
sentiment_pipeline = pipeline("sentiment-analysis", model=model_name)

#print(sentiment_pipeline("movie is not bad"))

res = []
for i in text:
  temp = sentiment_pipeline(i)
  temp[0]['label']
  if temp[0]['label'] == 'pos':
    res.append(1)
  elif temp[0]['label'] == 'neg':
    res.append(0)
print(res)
#sentiment_pipeline(data)

from sklearn.metrics import accuracy_score
print(len(res))

print(accuracy_score(data['label'], res))